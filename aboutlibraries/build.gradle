apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "org.jetbrains.dokka"
apply plugin: "com.vanniktech.maven.publish"

version VERSION_NAME

android {
    compileSdk = libs.versions.compileSdk.get().toInteger()
    namespace = "com.mikepenz.aboutlibraries"

    defaultConfig {
        minSdk = libs.versions.minSdk.get().toInteger()

        versionName VERSION_NAME
        versionCode Integer.parseInt(VERSION_CODE)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    buildFeatures {
        viewBinding true
    }

    productFlavors {
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    // specify the artifactId as module-name for kotlin
    kotlinOptions.freeCompilerArgs += ["-module-name", POM_ARTIFACT_ID]
}

dependencies {
    api project(':aboutlibraries-core')

    implementation(libs.androidx.core.ktx)
    implementation(libs.bundles.androidx.lifecycle)
    implementation(libs.androidx.cardView)
    implementation(libs.androidx.recyclerView)
    implementation(libs.google.material)

    // Coroutines
    implementation(libs.kotlin.coroutines.core)

    // add the constraintLayout used to create the items and headers
    implementation(libs.androidx.constraintLayout)

    // used to fill the RecyclerView with the items
    // and provides single and multi selection, expandable items
    // https://github.com/mikepenz/FastAdapter
    implementation(libs.fastAdapter.core)

    // navigation
    implementation(libs.androidx.navigation)
}

import com.vanniktech.maven.publish.SonatypeHost
if (project.hasProperty('pushall') || project.hasProperty('library_only')) {
    mavenPublishing {
        publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL, true)
        signAllPublications()
    }
}