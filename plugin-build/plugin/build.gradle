buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.31"
    }
}
plugins {
    id 'java'
    id "com.gradle.plugin-publish" version "0.15.0"
    id "java-gradle-plugin"
    id 'maven-publish'
}
apply plugin: 'groovy'
apply plugin: "org.jetbrains.kotlin.jvm"

group = "com.mikepenz.aboutlibraries.plugin"
version = rootProject.properties["version"]

gradlePlugin {
    plugins {
        aboutlibsPlugin {
            id = "${project.group}"
            implementationClass = "${project.group}.AboutLibrariesPlugin"
        }
    }
}

pluginBundle {
    website = 'https://github.com/mikepenz/AboutLibraries'
    vcsUrl = 'https://github.com/mikepenz/AboutLibraries'
    description = 'Plugin to resolve all libraries used in an app for the AboutLibraries library to offer relevant information of used libraries.'

    plugins {
        aboutlibsPlugin {
            displayName = 'AboutLibraries Library Gradle Plugin'
            tags = ['gradle', 'plugin', 'android']
        }
    }

    mavenCoordinates {
        groupId = "${project.group}"
        artifactId = "aboutlibraries-plugin"
    }
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.31'
}

compileGroovy {
    dependsOn tasks.getByPath('compileKotlin')
    classpath += files(compileKotlin.destinationDir)
}

processResources {
    from("../../aboutlibraries-definitions/src/main/res/raw/") {
        into 'static'
    }
    from("../../aboutlibraries-definitions/src/main/res/values/") {
        into 'values'
    }
}

// generate zip file for android maven release tool
task packageFiles(type: Zip, dependsOn: 'uploadArchives') {
    def groupDir = rootProject.group.replaceAll('\\.', '/')
    from("../repo/$groupDir/$rootProject.name/$rootProject.version/")
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}