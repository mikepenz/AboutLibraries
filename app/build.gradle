apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.mikepenz.aboutlibraries.plugin'

//wrap with try and catch so the build is working even if the signing stuff is missing
try {
    apply from: '../../../signing.gradle'
} catch (ignored) {
}

android {
    compileSdkVersion setup.compileSdk
    buildToolsVersion setup.buildTools

    defaultConfig {
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode release.versionCode
        versionName release.versionName

        setProperty("archivesBaseName", "AboutLibraries-v$versionName-c$versionCode")
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            try {
                signingConfig signingConfigs.debug
            } catch (ignored) {
            }
            minifyEnabled false
        }
        release {
            try {
                signingConfig signingConfigs.release
            } catch (ignored) {
            }
            zipAlignEnabled true
            minifyEnabled false
        }
        staging {
            try {
                signingConfig signingConfigs.release
            } catch (ignored) {
            }
            applicationIdSuffix ".debugStaging"
            matchingFallbacks = ['debug']
        }
    }
    productFlavors {
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude 'META-INF/library-core_release.kotlin_module'
        exclude 'META-INF/library_release.kotlin_module'
    }
}

// It is possible to define a custom config path with custom mappings
aboutLibraries {
    configPath = "config"
}

dependencies {
    implementation project(':library')

    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
    implementation "androidx.cardview:cardview:${versions.cardview}"

    //used to generate the drawer on the left
    //https://github.com/mikepenz/MaterialDrawer
    implementation "com.mikepenz:materialdrawer:${versions.materialdrawer}"

    //used to provide different itemAnimators for the RecyclerView
    //https://github.com/mikepenz/ItemAnimators
    implementation 'com.mikepenz:itemanimators:1.1.0'

    // used to provide out of the box icon font support. simplifies development,
    // and provides scalable icons. the core is very very light
    // https://github.com/mikepenz/Android-Iconics
    implementation "com.mikepenz:iconics-core:${versions.iconics}"

    //used to display the icons in the drawer
    //https://github.com/mikepenz/Android-Iconics
    implementation "com.mikepenz:material-design-iconic-typeface:2.2.0.6-kotlin@aar"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"

    // used only tho showcase multi flavor support
    stagingImplementation("com.squareup.okhttp3:okhttp:4.4.0")
}

configurations.all {
    resolutionStrategy.force "com.mikepenz:fastadapter:${versions.fastadapter}"
    resolutionStrategy.force "com.mikepenz:iconics-core:${versions.iconics}"
}